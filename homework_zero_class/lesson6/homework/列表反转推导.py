#!D:\Program Files\Anaconda3
# -*- coding: utf-8 -*-
# @Time : 2020/7/14 20:36
# @Author : 老萝卜
# @File : 列表反转推导.py
# @Software: PyCharm Community Edition

list1= [1,2,3,4,5,6]
list2=list1[::-1]
print(list2)

'''
# 列表下标从0 开始，到列表长度-1
#列表切片：list[参数1:参数2:参数3]  ，参数1 是切片的起始位置值，参数2是切片的终止位置值（不包含下标对应值），参数3是切片步长值
# list1的长度为 len(list1)=6,即列表list1是从下标0-5的列表，长度为6
print(list1[0:6:1])   # 切片从0到6，步长为1，可以得到列表所有元数   [1,2,3,4,5,6]   
print(list1[:6:1])    # 如果切片不输入起始值，终止值为列表长度6，步长为1，同样可以获得切片从0到6
print(list1[0::1])    # 如果切片起始值为0，终止值为不输入，步长为1，同样可以获得切片从0到6
print(list1[::1])     # 如果切片不起始值，也不输入终止值，步长为1，同样可以获得切片从0到6
print(list1[5:0:-1])  # 切片从下标5开始到3结束（不包含下标3），步长为-1，即倒着取从list1中取list1[5]、list1[4]两个元素
print(list1[:3:-1]）  # 切片不输入起始值，终止值仍为3，步长为-1，同样取到list1[5]、list1[4]两元素
print(list[5::-1])    # 切片从下标5开始,终止值不输入，步长为-1，结果倒序取出整个列表6个元素
print(list1[::-1])    # 故，切片不输入起始值和终止值，步长为1 ，是按顺序取出的整个列表，步长为一1，是按逆序取出的整个列表。
'''

# 感觉自己好啰嗦