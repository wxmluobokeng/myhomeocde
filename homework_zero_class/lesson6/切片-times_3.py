#!D:\Program Files\Anaconda3
# -*- coding: utf-8 -*-
# @Time : 2020/7/14 23:27
# @Author : 老萝卜
# @File : 切片-times_3.py
# @Software: PyCharm Community Edition


# 切片 是指从现有列表中，获取一个子列表
# 可以通过切片来获取指定的元素
# 语法: 列表[起始:结束:步长]
# 通过切片获取元素时，会包括起始位置的元素，不会包括结束位置的元素 左闭右开
hero = ['钢铁侠','绿巨人','蜘蛛侠','黑寡妇','蚁人','美国队长']
print(hero)
print(hero[2:4])    # ['蜘蛛侠', '黑寡妇']

# 通过切片会获取一个新的列表，不会影响原来的列表
print(hero[2:4]) # ['蜘蛛侠', '黑寡妇']
print(hero)

#　起始位置和结束位置可以不写
# 如果省略结束位置 则从当前的位置会一直截取到最后
print(hero[1:])   # ['绿巨人', '蜘蛛侠', '黑寡妇', '蚁人', '美国队长']

# 如果省略开始位置 则会从第一个元素截取到结束位置，但是不包括结束位置的元素
print(hero[:3]) # ['钢铁侠', '绿巨人', '蜘蛛侠']

# 如果开始位置和结束位置都省略，则会从第一个位置截取到最后一个位置上面的元素 (全部)
print(hero[:]) # ['钢铁侠', '绿巨人', '蜘蛛侠', '黑寡妇', '蚁人', '美国队长']

# 步长表示每次获取元素的间隔，默认值为1,可以省略
# 步长可以为负数但是不能为0
print(hero[0:5:1]) # ['钢铁侠', '绿巨人', '蜘蛛侠', '黑寡妇', '蚁人']
print(hero[0:5]) # ['钢铁侠', '绿巨人', '蜘蛛侠', '黑寡妇', '蚁人']
print(hero[0:5:2]) # ['钢铁侠', '蜘蛛侠', '蚁人']
print(hero[0:5:3])# ['钢铁侠', '黑寡妇']
print(hero[0:5:8])# ['钢铁侠']                                      #当步长过大时，仅会换序取，取不到时就不取，不会报错
print(hero[::2]) # ['钢铁侠', '蜘蛛侠', '蚁人']
print(hero[::-1]) # ['美国队长', '蚁人', '黑寡妇', '蜘蛛侠', '绿巨人', '钢铁侠']
# print(hero[::0]) # ValueError: slice step cannot be zero          #步长值为0时，程序报错
print(hero[4:1:-1]) # ['蚁人', '黑寡妇', '蜘蛛侠']

print(hero[0:5:-1])  # []           #如果结束值>起始值，且步长为负，将切不到元素，但不报错

